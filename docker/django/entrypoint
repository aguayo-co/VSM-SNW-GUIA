#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset


# Initialize with empty value bye default
DATABASE_URL=${DATABASE_URL:-""}
chmod +x manage.py
# Wait for Postgres for Django related commands.
if [[ $@ == *"manage.py "* && ! -z "$DATABASE_HOST" && -z "$DATABASE_URL" ]]
then
    RETRIES=60
    >&2 echo "Waiting for Postgres"
    until PGPASSWORD=$DATABASE_PASSWORD pg_isready -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER ; do
        if [ $RETRIES -eq 0 ]; then
            >&2 echo "Exiting"
            exit
        fi
        >&2 echo "Waiting for Postgres server, $((RETRIES--)) remaining attempts"
        sleep 1
    done
fi

# Run only if django server is being run.
if [[ $@ == *"manage.py runserver"* ]]
then

    # Migrations
    >&2 echo "Running Django migrations (background job)"
    python manage.py migrate --noinput &
    python manage.py createcachetable &

    # PIP requirements for easy deploy
    >&2 echo "Exporting requirements (background job)"
    poetry export -f requirements.txt -o requirements.txt --without-hashes &

    # Update Index
    >&2 echo "Updating Search Engine Index"
    python manage.py update_index &
fi

exec "$@"